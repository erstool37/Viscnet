project: "dump"
name: "test_run_classification" # will use aug in the future..!
version: v0

## All dataset information are altered to be written in SI units, please upload the updated dataset accordingly

train_settings:
  num_workers : 4 # CPU workers
  seed : 1205
  classification : True # True : classification, False : regression, !!! CHANGE LOSS FUNCTION !!!
  watch_bool : False # True : wandb gradient logging, False : no logging
  test_bool : True # True : test after training, False : no test

dataset:
  train :
    train_root : dataset/CFDArchive/sph_realvisc_10rpm_32frame
    frame_num : 10
    time : 3.2
    rpm_class : 10
    dataloader :
      dataloader : VideoDataset # in classification mode, check number of classes
      batch_size : 1
      aug_bool : False
      test_size : 0.2
      random_state : 37
  test : 
    test_root : dataset/RealArchive/real_20rpm_increment
    frame_num : 10
    time : 3.2
    rpm_class : 10
    dataloader :
      dataloader : VideoDatasetReal
      batch_size : 1
      aug_bool : False
      test_size : 1e-6
      random_state : 37
  preprocess:
    scaler : interscaler
    descaler : interdescaler

model:
  transformer_bool : True # True : use transformer, False : use CNN-LSTM
  transformer :
    encoder: VivitEmbed
    class : 10
  cnn : 
    encoder : Resnet34LSTMEMBED
    cnn_train : True
    cnn : resnet34
    lstm_size : 256
    lstm_layers : 5
    output_size : 3
    drop_rate : 0.0
    embedding_size : 512
    embed_weight : 0.0

training:
  curr_bool : False # True : load specified weight, False : start from rock bottom
  curr_ckpt : class10_rpm10_vivit_large_currtrain_realvisc32dataset_REALrpmembed_augTrue_0818_v0.pth # Deletes fc weights
  num_epochs : 25
  loss : CE
  optimizer:
    optim_class: AdamW
    scheduler_class: CosineAnnealingLR
    lr: 1e-5  # 1e-2 ~ 1e-5 
    eta_min : 1e-10
    weight_decay: 1e-2 # 1e-2 정도로
    patience : 10

misc_dir:
  ckpt_root : "src/weights/"
  video_subdir : "videos"
  para_subdir : "parameters"
  norm_subdir : "parametersNorm"
  
##### Legacy, for flow normalization, refer to main_flow.py in utils/ARCHIVE #####
# flow: 
#   flow : RealNVP
#   flow_bool : False
#   dim: 4 
#   con_dim: 256 # same as lstm hidden_size
#   hidden_dim: 64 # innate dimension of flow
#   num_layers : 10 # number of s, t layers stacked